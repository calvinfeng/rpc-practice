// Code generated by protoc-gen-go. DO NOT EDIT.
// source: robot/robot.proto

package robot

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Position struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d65d06a1694be51, []int{0}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Position) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type NavRequest struct {
	Robot                string    `protobuf:"bytes,1,opt,name=robot,proto3" json:"robot,omitempty"`
	Destination          *Position `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NavRequest) Reset()         { *m = NavRequest{} }
func (m *NavRequest) String() string { return proto.CompactTextString(m) }
func (*NavRequest) ProtoMessage()    {}
func (*NavRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d65d06a1694be51, []int{1}
}

func (m *NavRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NavRequest.Unmarshal(m, b)
}
func (m *NavRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NavRequest.Marshal(b, m, deterministic)
}
func (m *NavRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavRequest.Merge(m, src)
}
func (m *NavRequest) XXX_Size() int {
	return xxx_messageInfo_NavRequest.Size(m)
}
func (m *NavRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NavRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NavRequest proto.InternalMessageInfo

func (m *NavRequest) GetRobot() string {
	if m != nil {
		return m.Robot
	}
	return ""
}

func (m *NavRequest) GetDestination() *Position {
	if m != nil {
		return m.Destination
	}
	return nil
}

type NavResponse struct {
	DistanceTraveled     float64  `protobuf:"fixed64,1,opt,name=distance_traveled,json=distanceTraveled,proto3" json:"distance_traveled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NavResponse) Reset()         { *m = NavResponse{} }
func (m *NavResponse) String() string { return proto.CompactTextString(m) }
func (*NavResponse) ProtoMessage()    {}
func (*NavResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d65d06a1694be51, []int{2}
}

func (m *NavResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NavResponse.Unmarshal(m, b)
}
func (m *NavResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NavResponse.Marshal(b, m, deterministic)
}
func (m *NavResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NavResponse.Merge(m, src)
}
func (m *NavResponse) XXX_Size() int {
	return xxx_messageInfo_NavResponse.Size(m)
}
func (m *NavResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NavResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NavResponse proto.InternalMessageInfo

func (m *NavResponse) GetDistanceTraveled() float64 {
	if m != nil {
		return m.DistanceTraveled
	}
	return 0
}

func init() {
	proto.RegisterType((*Position)(nil), "robot.Position")
	proto.RegisterType((*NavRequest)(nil), "robot.NavRequest")
	proto.RegisterType((*NavResponse)(nil), "robot.NavResponse")
}

func init() { proto.RegisterFile("robot/robot.proto", fileDescriptor_9d65d06a1694be51) }

var fileDescriptor_9d65d06a1694be51 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0xca, 0x4f, 0xca,
	0x2f, 0xd1, 0x07, 0x93, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xac, 0x60, 0x8e, 0x92, 0x1a,
	0x17, 0x47, 0x40, 0x7e, 0x71, 0x66, 0x49, 0x66, 0x7e, 0x9e, 0x10, 0x0f, 0x17, 0x63, 0x85, 0x04,
	0xa3, 0x02, 0xa3, 0x06, 0x63, 0x10, 0x63, 0x05, 0x88, 0x57, 0x29, 0xc1, 0x04, 0xe1, 0x55, 0x2a,
	0x85, 0x72, 0x71, 0xf9, 0x25, 0x96, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x89, 0x70,
	0x41, 0xb4, 0x83, 0x55, 0x73, 0x06, 0x41, 0x38, 0x42, 0x86, 0x5c, 0xdc, 0x29, 0xa9, 0xc5, 0x25,
	0x99, 0x79, 0x89, 0x20, 0xe3, 0x24, 0x98, 0x15, 0x18, 0x35, 0xb8, 0x8d, 0xf8, 0xf5, 0x20, 0xb6,
	0xc2, 0x6c, 0x09, 0x42, 0x56, 0xa3, 0x64, 0xc5, 0xc5, 0x0d, 0x36, 0xb6, 0xb8, 0x20, 0x3f, 0xaf,
	0x38, 0x55, 0x48, 0x9b, 0x4b, 0x30, 0x25, 0xb3, 0xb8, 0x24, 0x31, 0x2f, 0x39, 0x35, 0xbe, 0xa4,
	0x28, 0xb1, 0x2c, 0x35, 0x27, 0x35, 0x05, 0xea, 0x22, 0x01, 0x98, 0x44, 0x08, 0x54, 0xdc, 0xc8,
	0x11, 0xec, 0xa4, 0xcc, 0x74, 0xb0, 0x49, 0x42, 0xc6, 0x5c, 0x1c, 0x50, 0x5e, 0xaa, 0x90, 0x20,
	0xd4, 0x4e, 0x84, 0x8b, 0xa5, 0x84, 0x90, 0x85, 0x20, 0xb6, 0x29, 0x31, 0x24, 0xb1, 0x81, 0xc3,
	0xc2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x9c, 0x87, 0xe9, 0x20, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NavigationClient is the client API for Navigation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NavigationClient interface {
	Navigate(ctx context.Context, in *NavRequest, opts ...grpc.CallOption) (*NavResponse, error)
}

type navigationClient struct {
	cc *grpc.ClientConn
}

func NewNavigationClient(cc *grpc.ClientConn) NavigationClient {
	return &navigationClient{cc}
}

func (c *navigationClient) Navigate(ctx context.Context, in *NavRequest, opts ...grpc.CallOption) (*NavResponse, error) {
	out := new(NavResponse)
	err := c.cc.Invoke(ctx, "/robot.Navigation/Navigate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NavigationServer is the server API for Navigation service.
type NavigationServer interface {
	Navigate(context.Context, *NavRequest) (*NavResponse, error)
}

func RegisterNavigationServer(s *grpc.Server, srv NavigationServer) {
	s.RegisterService(&_Navigation_serviceDesc, srv)
}

func _Navigation_Navigate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NavRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NavigationServer).Navigate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/robot.Navigation/Navigate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NavigationServer).Navigate(ctx, req.(*NavRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Navigation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "robot.Navigation",
	HandlerType: (*NavigationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Navigate",
			Handler:    _Navigation_Navigate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "robot/robot.proto",
}
